<Project>
    <Target Name="GetGitHash" BeforeTargets="WriteGitHash" Condition="'$(BuildHash)' == '' and '$(GitHashEnabled)' != 'False'">
        <PropertyGroup>
            <!-- temp file for the git version (lives in "obj" folder)-->
            <VerFile>$(IntermediateOutputPath)gitver</VerFile>
            <RepoFile>$(IntermediateOutputPath)gitrepo</RepoFile>
        </PropertyGroup>

        <Message Importance="high" Text="Unify> Attempting git hash because &lt;GitHashEnabled/&gt; is not false. If this project is not a git repo, this will fail but can be ignored" />

        <!-- write the hash to the temp file.-->
        <Exec Command="git -C $(ProjectDir) describe --long --always --dirty &gt; $(VerFile)" ContinueOnError="true">
            <Output TaskParameter="ExitCode" PropertyName="GitExitCode"/>
        </Exec>

        <Exec Command="git -C $(ProjectDir) config --get remote.origin.url &gt; $(RepoFile)" ContinueOnError="true">
            <Output TaskParameter="ExitCode" PropertyName="GitExitCode"/>
        </Exec>

        <!-- read the version into the GitVersion itemGroup-->
        <ReadLinesFromFile File="$(VerFile)">
            <Output TaskParameter="Lines" ItemName="GitVersion"/>
        </ReadLinesFromFile>

        <ReadLinesFromFile File="$(RepoFile)">
            <Output TaskParameter="Lines" ItemName="GitRepo"/>
        </ReadLinesFromFile>

        <!-- Set the BuildHash property to contain the GitVersion, if it wasn't already set.-->
        <PropertyGroup>
            <BuildHash>@(GitVersion)</BuildHash>
            <RepoUrl>@(GitRepo)</RepoUrl>
        </PropertyGroup>

    </Target>

    <Target Name="WriteGitHash" BeforeTargets="CoreCompile">
        <!-- names the obj/CustomAssemblyInfo.cs file -->
        <PropertyGroup>
            <CustomAssemblyInfoFile>$(IntermediateOutputPath)CustomAssemblyInfo.cs</CustomAssemblyInfoFile>
        </PropertyGroup>
        <!-- includes the CustomAssemblyInfo for compilation into your project -->
        <ItemGroup>
            <Compile Include="$(CustomAssemblyInfoFile)"/>
        </ItemGroup>
        <!-- defines the AssemblyMetadata attribute that will be written -->
        <ItemGroup>
            <AssemblyAttributes Include="AssemblyMetadata">
                <_Parameter1>GitHash</_Parameter1>
                <_Parameter2>$(BuildHash)</_Parameter2>
            </AssemblyAttributes>
            <AssemblyAttributes Include="AssemblyMetadata">
                <_Parameter1>GitRepo</_Parameter1>
                <_Parameter2>$(RepoUrl)</_Parameter2>
            </AssemblyAttributes>
        </ItemGroup>
        <!-- writes the attribute to the customAssemblyInfo file -->
        <WriteCodeFragment Language="C#" OutputFile="$(CustomAssemblyInfoFile)" AssemblyAttributes="@(AssemblyAttributes)"/>
    </Target>
    
</Project>